package fix

import scala.meta.Defn
import scala.meta.Term
import scala.meta.inputs.Input
import scala.meta.transversers._
import scalafix.Patch
import scalafix.lint.Diagnostic
import scalafix.lint.LintSeverity
import scalafix.v1.SemanticDocument
import scalafix.v1.SemanticRule
import scalafix.v1.XtensionSeqPatch

class Example extends SemanticRule("Example") {
  override def fix(implicit
    doc: SemanticDocument
  ): Patch = {
    doc.input match {
      case f: Input.VirtualFile
          if f.path.contains("src/main/scala") =>
        Patch.empty
      case _ =>
        doc.tree.collect {
          case t @ Defn.Def.After_4_7_3(
                Nil,
                Term.Name("a"),
                Nil,
                None,
                Term.Name("b")
              ) =>
            Patch.lint(
              Diagnostic(
                id = "",
                message = "",
                position = t.pos,
                explanation = "",
                severity = LintSeverity.Warning
              )
            )
        }.asPatch
    }
  }
}

